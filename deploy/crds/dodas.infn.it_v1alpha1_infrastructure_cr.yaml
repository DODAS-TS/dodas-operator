apiVersion: dodas.infn.it/v1alpha1
kind: Infrastructure
metadata:
  name: example-infrastructure
spec:
  name: test
  image: dodasts/dodas-client:v0.3.3 
  template: |
    tosca_definitions_version: tosca_simple_yaml_1_0

    imports:
      - dodas_types: https://raw.githubusercontent.com/dodas-ts/dodas-templates/master/tosca-types/dodas_types.yml
    
    description: TOSCA template for a complete CMS computing cluster on top of K8s orchestrator
    
    topology_template:
    
      inputs:
    
        number_of_masters:
          type: integer
          default: 1
    
        num_cpus_master: 
          type: integer
          default: 4
    
        mem_size_master:
          type: string
          default: '8 GB'
    
        number_of_slaves:
          type: integer
          default: 1 
    
        num_cpus_slave: 
          type: integer
          default: 4
    
        mem_size_slave:
          type: string
          default: '8 GB'
    
        server_image:
          type: string
          #default: 'ost://openstack.fisica.unipg.it/cb87a2ac-5469-4bd5-9cce-9682c798b4e4'
          #default: 'ost://horizon.cloud.cnaf.infn.it/3d993ab8-5d7b-4362-8fd6-af1391edca39'
          default: 'ost://cloud.recas.ba.infn.it/1113d7e8-fc5d-43b9-8d26-61906d89d479'
          #default: 'ost://cloud.recas.ba.infn.it/8f667fbc-40bf-45b8-b22d-40f05b48d060'
    
      node_templates:
    
    
        k8s_master:
          type: tosca.nodes.DODAS.FrontEnd.Kubernetes
          properties:
            admin_token: testme
            # kube_version: 1.14.0
            # kube_front_end_ip: { get_attribute: [ k8s-master-server, private_address, 0 ] } 
          requirements:
            - host: k8s-master-server
    
        k8s_slave:
          type: tosca.nodes.DODAS.WorkerNode.Kubernetes 
          properties:
            front_end_ip: { get_attribute: [ k8s-master-server, private_address, 0 ] }
            #front_end_ip: { get_attribute: [ k8s-master-server, public_address, 0 ] }
            #kube_version: 1.14.0
            #nfs_master_ip: { get_attribute: [ k8s-master-server, private_address, 0 ] }
          requirements:
            - host: k8s-slave-server
    
        k8s-master-server:
          type: tosca.nodes.indigo.Compute
          capabilities:
            endpoint:
              properties:
                #network_name: infn-farm.PUBLIC
                network_name: PUBLIC
                ports:
                  dashboard:
                    protocol: tcp
                    source: 30443
            scalable:
              properties:
                count: { get_input: number_of_masters }
            host:
              properties:
                #instance_type:  m1.medium
                num_cpus: { get_input: num_cpus_master }
                mem_size: { get_input: mem_size_master } 
            os:
              properties:
                image: { get_input: server_image }
    
        k8s-slave-server:
          type: tosca.nodes.indigo.Compute
          capabilities:
            endpoint:
              properties:
                #network_name: test-net.PRIVATE
                network_name: PRIVATE
                #network_name: PUBLIC 
            scalable:
              properties:
                count: { get_input: number_of_slaves }
            host:
              properties:
                #instance_type:  m1.large
                num_cpus: { get_input: num_cpus_slave }
                mem_size: { get_input: mem_size_slave } 
            os:
              properties:
                #image: 'ost://openstack.fisica.unipg.it/1c334195-3203-43cb-b13f-d3159304a6d6'
                image: { get_input: server_image }
    
      outputs:
        k8s_endpoint:
          value: { concat: [ 'https://', get_attribute: [ k8s-master-server, public_address, 0 ], ':30443' ] }
  
  authFile: |
    cloud:
      ## CNAF
      #id: ost
      #type: OpenStack
      #host: https://horizon.cloud.cnaf.infn.it:5000/  
      #username: indigo-dc
      #password: eyJraWQiOiJyc2ExIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIxZTcwNzRlNS05NmZlLTQzZTgtODgxZC00ZDU3MmMxMjg5MzEiLCJpc3MiOiJodHRwczpcL1wvZG9kYXMtaWFtLmNsb3VkLmNuYWYuaW5mbi5pdFwvIiwiZXhwIjoxNTc5NzI0NTI0LCJpYXQiOjE1Nzk3MTAxMjQsImp0aSI6ImZkZTFjNmVkLTFmYzgtNDU3Mi1iZGQwLWJhODJmNjljZDJkMCJ9.SDfv_LBjZl9MDIF00Hw22HDoiYGXK39zuS9hV7YVtKdchmqnYO30qYUufSbRRWgTdXikMcR3UG2wfDpISsiaRAzVmgeeSaKcYMpQ5Sopms5S7BmvsBtYIZqytl0qx_arFzpin6vaYqSa32gt4pE7yWheewUh0NYEDwSoyWn-jrM
      #tenant: oidc 
      #auth_version: 3.x_oidc_access_token
      #service_region: regionOne 
      ## BARI
      id: ost
      type: OpenStack
      host: https://cloud.recas.ba.infn.it:5000/
      username: indigo-dc
      password: token_cc
      #password: eyJraWQiOiJyc2ExIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIxZTcwNzRlNS05NmZlLTQzZTgtODgxZC00ZDU3MmMxMjg5MzEiLCJpc3MiOiJodHRwczpcL1wvZG9kYXMtaWFtLmNsb3VkLmNuYWYuaW5mbi5pdFwvIiwiZXhwIjoxNTc5NzI0NTI0LCJpYXQiOjE1Nzk3MTAxMjQsImp0aSI6ImZkZTFjNmVkLTFmYzgtNDU3Mi1iZGQwLWJhODJmNjljZDJkMCJ9.SDfv_LBjZl9MDIF00Hw22HDoiYGXK39zuS9hV7YVtKdchmqnYO30qYUufSbRRWgTdXikMcR3UG2wfDpISsiaRAzVmgeeSaKcYMpQ5Sopms5S7BmvsBtYIZqytl0qx_arFzpin6vaYqSa32gt4pE7yWheewUh0NYEDwSoyWn-jrM
      tenant: oidc 
      auth_version: 3.x_oidc_access_token
      service_region: recas-cloud 

  im:
      id: im
      type: InfrastructureManager
      host: https://im-dodas.cloud.cnaf.infn.it/infrastructures
      token: eyJraWQiOiJyc2ExIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIxZTcwNzRlNS05NmZlLTQzZTgtODgxZC00ZDU3MmMxMjg5MzEiLCJpc3MiOiJodHRwczpcL1wvZG9kYXMtaWFtLmNsb3VkLmNuYWYuaW5mbi5pdFwvIiwiZXhwIjoxNTc5NzI0NTI0LCJpYXQiOjE1Nzk3MTAxMjQsImp0aSI6ImZkZTFjNmVkLTFmYzgtNDU3Mi1iZGQwLWJhODJmNjljZDJkMCJ9.SDfv_LBjZl9MDIF00Hw22HDoiYGXK39zuS9hV7YVtKdchmqnYO30qYUufSbRRWgTdXikMcR3UG2wfDpISsiaRAzVmgeeSaKcYMpQ5Sopms5S7BmvsBtYIZqytl0qx_arFzpin6vaYqSa32gt4pE7yWheewUh0NYEDwSoyWn-jrM